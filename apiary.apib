FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Marketplace MAPI

MAPI is a mobile REST API to interact with Marketplace.

## General provisions
- Тексты (в т.ч. error messages) возвращаются локализованные с учетом заголовочного параметра Accept-Language (ru или en-US)
- Если в заголовке не задан Content-Type, то по умолчанию запрос принимается в формате application/json (кроме случаев, описанных явно).
- Если в заголовке не задан Accept, то по умолчанию response ожидается в формате application/json.
- C каждым запросом в заголовке передается API Key (x-mapi-key). //Нужно ли?
- С каждым запросом, где требуется авторизованный доступ, в заголовке передается токен доступа x-mapi-access-token, выданный сервером. (или используем jwt?)
- В любом ответе (response) в заголовке может содержаться токен доступа x-mapi-access-token и срок истечения токена x-mapi-access-exp.
- При запросе с невалидным токеном пользователя возвращается ошибка со статус кодом 401 (Unauthorized).
- Значения ключей объектов (полей) должны быть в формате under_score.
- Версия API задается с помощью необязательного заголовочного параметра x-mapi-version. Если параметр не задан, то используется наиболее свежая версия.
- По умолчанию response (если не пустой) на корневом уровне должен содержать JSON-объект. 
- Основные результаты запроса должны содержаться в объекте-обертке `data`. 
    ```
    { "data": {...} } - если ожидается объект
    
    или
    
    { "data": { "results": [...] } } - если ожидается массив
    ```
- В случае, если ответ от сервера не требуется, но ожидается подтверждение того, что внутренняя логика отработала успешно, то достачно вернуть response вида:
    ```
    { "data": null }
    ```
- Формат ответа для всех методов в случае ошибки (объект Error): 
    ```
    {
        "error": {
            "code": 123, // Inner code
            "message": "Something bad"
        }
    }
    ```
- Ответ не должен содержать одновременно объекты data и error.
- Для пагинации по спискам в запросе возможно указать номер страницы (page, счет всегда начинается с 1) и кол-во записей на страницу (limit, по умолчанию 20). 
- Для запросов с пагинацией в response внутри объекта data добавляется объект Navigation.

# Group Auth

## Authentication [/auth]

### Sign In [POST /auth/sign_in]

Аутентификация пользователя (разными способами). Возвращает в заголовке токен доступа пользователя (access token) 
и токен обновления (refresh token), а также сроки их жизни.
Полученные в ответе токены сохраняются на клиенте. Далее access token передается в каждом запросе, 
refresh token - только в запросах на обновление токенов.

__WARNING__: В первой версии реализуем только вход через соц. сети. 

+ Request (application/json)
   
    + Headers
       
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
    
    + Attributes
        - One of
            - Properties
                - auth_provider: social (required, fixed) - authentication provider
                - codename (Social Net, required) - codename of a social network 
                - token: token_value (string, required) - token from social network 
                - params (object, optional) - additional parameters if needed
            - Properties
                - auth_provider: email (required, fixed)
                - email (string, required)
                - password (string, required)

+ Response 204 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-refresh-token: `refresh_token`
            x-mapi-refresh-exp: 2019-02-28T17:39:57.620Z
            x-mapi-version: 1.0
         
### Sign In Anonymously [POST /auth/anonymous]

Возвращает токен нового анонимного пользователя.

+ Request (application/json)
   
    + Headers
       
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 204 (application/json)

    + Headers
       
            x-mapi-access-token: <anonymous_token>
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-refresh-token: `refresh_token`
            x-mapi-refresh-exp: 2019-02-28T17:39:57.620Z
            x-mapi-version: 1.0         
         
### Refresh Token [POST /auth/refresh]

Возвращает обновленный access token существующего пользователя, если в header'е запроса валидные access token и refresh token.
При запросе с невалидными токенами возвращает ошибку 401 Unauthorized.
Если access token валидный, но не хватает полномочий, то возвращает ошибку 403.
Полученный access токен сохраняется на клиенте и далее передается в заголовке каждого запроса.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `old_access_token`
            x-mapi-refresh-token: `old_refresh_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 204 (application/json)

    + Headers
       
            x-mapi-access-token: <access_token>
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
        
+ Response 403 (application/json)

    + Attributes
        - error (Error, required)

# Group Common
            
## Web Pages [/web_pages/{key}]

+ Parameters
    - key (Web Page Key, optional, `about`) - key name of a web page (enum is defined in Data Structures section)

### Get Pages [GET]

Получение контента веб страниц. Если не указан параметр с конкретной web-страницей, то по умолчанию возвращать все страницы.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + attributes
        - data
            - results (array)
                - (object)
                    - key (Web Page Key)
                    - url: https://destination_href (string, required) - web page url
                    - content: html_content (string, optional) - content in html format

# Group Me 

i.e. User Profile

## Personal Info [/me] 
<!-- or [/users/me] -->

### Get Personal Profile [GET]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - user (User Extended)

### Update Personal Profile (General Info) [PATCH]

[Необходимость метода под вопросом, т.к. данная информация (в частности имя) должна браться из соц.сетей.]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
    
    + Attributes
        - name: John Dow (required) - user's name or user's id if name wasn't set yet 
        - last_name: Dow (optional) - user's last name
        - birthday: `1990-06-01T18:06:28.620Z` (optional) - date-time of user's birthday

+ Response 200 (application/json)
    
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
    
    + Attributes
        - data 
            - user (User Extended)

## Birthday [/me/birthday]
<!-- or [/users/me/birthday] -->

### Get birthday date [GET]
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)
    
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
    
    + Attributes
        - data
            - birthday: `1990-06-01T18:06:28.620Z` (string, required) - date-time of user's birthday

### Set birthday date [PATCH]
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
    
    + Attributes
        - birthday: `1990-06-01T18:06:28.620Z` (required) - date-time of user's birthday

+ Response 200 (application/json)
    
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
    
    + Attributes
        - data
            - birthday: `1990-06-01T18:06:28.620Z` (required) - date-time of user's birthday

## Addresses [/me/addresses]
<!-- or [/users/me/addresses] -->

### List addresses [GET]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)

    + Attributes
        - data 
            - results (array[Address])

### Create address [POST]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - address (Address) - Object Address but without id
            
+ Response 201 (application/json)

    + Attributes
        - data 
            - address (Address)

### Update address [PATCH]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - Include Address
            
+ Response 200 (application/json)

    + Attributes
    
        - data 
            - address (Address)

### Remove address [DELETE /me/addresses/{id}]

+ Parameters
    - id (required, string, `1`) - Address ID
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)

    + Attributes
    
        - data: null

## User Avatar [/me/avatar] 
<!-- or [/users/me/avatar] -->

### Upload User Avatar [POST]

[Необходимость метода под вопросом, т.к. аватар должен браться из соц.сетей.]

+ Request (multipart/form-data; boundary={boundary value})
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
    
    + Body
        
            --{boundary value}
                Content-Disposition: form-data; name="image"; filename="image.png"
                Content-Type: image/png
        
                {file content}
            --{boundary value}--
            
+ Response 201 (application/json)
    
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - avatar: https://user_avatar_cdn_href (string, required) - user's avatar url

## Gender [/me/gender]
<!-- or [/users/me/gender] -->

### Retrieve User Gender [GET]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - gender (Gender, required)

### Change User Gender [PATCH]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - gender (Gender, required)

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - gender (Gender, required)

## Billing Info [/me/billing]

### Get [GET]

Получение списка доступных вариантов оплаты и списка банковсих карт

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - cards (array[Bank Card])
            - payment_variants (array)
                - (object)
                    - variant (Payment Variant)
                    - is_preferable: true (boolean) - Whether this variant was selected as preferable

### Set [PUT /me/billing/select]

Выбрать предпочтительный вариант оплаты.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - variant (Payment Variant)

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - cards (array[Bank Card])
            - payment_variants (array)
                - (object)
                    - variant (Payment Variant)
                    - is_preferable: true (boolean) - Whether this variant was selected as preferable

## Bank cards [/me/billing/cards]

### Add Bank Card [POST]

Добавление банковской карты

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - token: 334b76e423e14d37101cceed318d2cfe7bdd2748 (string) - Token received from payment provider
        - type: card_type (string) - Card Type
        - last4: 2321 (string) - last 4 digits from card number
        - expiry: `2019-01-28T17:39:57.620Z` (string) - Date of card expiration
        - cardholder: Name1 Name2 (string) - Name of a card holder

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - card (Bank Card)

### Set preferable card [PUT /me/billing/cards/{id}]

Выбрать основную карту для оплаты.

+ Parameters
    - id: <id> (string) - Identifier of the card to mark as preferable 

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
    
+ Response 200 (application/json)

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - card (Bank Card) - Card that was marked as preferable

### Delete Card [DELETE /me/billing/cards/{id}]

Удаление карты из списка добавленных карт.

+ Parameters
    - id: <id> (string) - Identifier of the card to delete 
    
+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
    
+ Response 200 (application/json)

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - ack: true (boolean, required) - Acknowledge that card was deleted

## Interests [/me/interests]
<!-- or [/users/me/interests] -->

### List personal interests [GET]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - results (array[Interest])

### Update personal interests [POST]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - interests_diff
            - excluded: id1, id2 (array[string]) - List of ids to delete from personal interests
            - included: id3, id4 (array[string]) - List of ids to add to personal interests 

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - results (array[Interest])

# Group Interests

## Collection [/interests]

[Возможно это частный случай Categories.]

### List interests [GET]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - results (array[Interest])

# Group Categories

## Collection [/categories]

### List categories [GET /categories{?depth,interests}]

Получение списка категорий.
С помощью параметра depth задается глубина вложенности.
Если depth не задан или равен 0, то возвращается полная иерархия для указанной категории.
Если используется флаг `interests=true`, то необходимо вернуть только те категории, которые являются интересами.

+ Parameters
    - depth: 2 (optional, number) - Depth of a hierarchy to fetch
    - interests: false (optional, boolean) - Whether to return only those categories that are tagged as interests or not

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - results (array[Category], required)

## Single [/categories/{id}]

### Retrieve a single Category node [GET]

+ Parameters

    - id (string, optional, `1`) - Category ID
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - category (Category)

# Group Feeds

## Home Feed [/feeds/home]

### Retrieve Home Feed [POST]

Получение ленты Home. 

Возвращает 2 основных объекта: фильтр (filter) и саму ленту (feed).

Фильтр содержит массив объектов типа `Interest` (интересы пользователя). [__Info__: тут пока под вопросом нужно ли возвращать весь список доступных интересов, если пользователь еще ничего не выбрал].

Лента разбита на секции (sections), которые могут содержать объекты header, footer и коллекцию entities.

Объект `navigation` используется для пагинации.

Товары должны возвращаться отфильтрованные с учетом пола, даты рождения и интересов пользователя, т.е. на основе данных, которые уже есть в системе.
Кроме того, для фильтрации товаров можно дополнительно использовать параметр interests (массив идентификаторов).

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - limit: 20 (number, optional) - Max quantity of records per page
        - page: 1 (number, optional) - Index of a page
        - interests: 1, 5 (array[string], optional) - identifiers of interests
            
+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - filter (required)
                - interests (array[Interest], required)
            - feed (required)
                - sections (required)
                    - banners (optional)
                        - order_num: 0 (number, required) - order number of a section
                        - header (object, optional)
                        - entities (array[Banner], optional)
                        - footer (object, optional)
                    - products (required)
                        - order_num: 1 (number, required) - order number of a section
                        - header (object, optional)
                            - title: Section Title if needed (optional)                    
                        - entities (array[Product], required)
                - navigation (Navigation, required)

# Group Products

## Product [/products/{id,sku}]

+ Parameters

    - id (string, required, `1`) - Product ID
    - sku (SKU, optional, `sku_id_example`) - SKU

### Get Product [GET]

Получение товара по ID и/или SKU

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)
    
    + Attributes
        - data 
            - product (Product Extended)

# Group Shops

## Shop [/shops/{id}]

### Get Shop [GET]

Получение данных о магазине.

+ Parameters

    + id (string, required, `123`) - Shop ID

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)
    
    + Attributes
        - data 
            - shop (Shop Extended)

# Group Favorites

## Favorite Products [/favorites/products]

### Fetch [GET /favorites/products{?page,limit}]

Получение ленты избранных товаров.

+ parameters
    - limit: 20 (number, optional) - Max quantity of records per page
    - page: 1 (number, optional) - Index of a page

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - results (array[Product], required)
            - navigation (Navigation, required)

### Add [POST]

Добавить в избранные товары.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - id: <product_id> (string, required) - Product identifier
            
+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - product (Product, required)

### Remove [DELETE /favorites/products/{id}]

Удалить товар из избранных.

+ Parameters
    - id (required, string, `1`) - Product ID

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data: null

## Favorite Shops [/favorite/shops]

### List [GET /favorite/shops{?page,limit}]

Получение ленты избранных магазинов.

+ parameters
    - limit: 20 (number, optional) - Max quantity of records per page
    - page: 1 (number, optional) - Index of a page
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - results (array[Shop], required)
            - navigation (Navigation, required)

### Add [POST]

Добавить в избранные магазины.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        - id: <shop_id> (string, required) - Shop identifier
            
+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - shop (Shop, required)

### Remove [DELETE /favorites/shops/{id}]

Удалить магазин из избранных.

+ Parameters
    - id (required, string, `1`) - Shop ID

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data: null

# Group Search

## Products [/search/products]

### Fetch products [POST]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        
        - limit: 20 (number, optional) - Max quantity of records per page
        - page: 1 (number, optional) - Index of a page
        - Include Search Params

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        + data
            - results (array[Product], required)
            - navigation (Navigation, required)

## Shops [/search/shops]

### Fetch shops [POST]

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
    + Attributes
        
        - limit: 20 (number, optional) - Max quantity of records per page
        - page: 1 (number, optional) - Index of a page
        - Include Search Params

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - results (array[Shop], required)
            - navigation (Navigation, required)

# Group Cart

## Cart [/cart]

### Retrieve Cart [GET]

Получение корзины пользователя.

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
             
+ Response 200 (application/json)

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
    
    + Attributes
        - data
            - Include Cart

### Add to Cart [POST /cart/items]
<!-- or /cart/{sku} -->

Добавление товара в корзину.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
    + Attributes
        - id: <product_id> (string)
        - sku: <sku_example> (SKU, optional)
        - count: 1 (number, required)
        - attributes (object) - size, color or custom attributes - ??
             
+ Response 200 (application/json)

     + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
     + Attributes
        - data
            - item (Cart Item) - Added Cart Item

### Delete items [DELETE /cart/items{?ids}]
<!-- or /cart{?sku*} -->

Удалить один или несколько товаров (sku) из корзины

+ Parameters
    - ids (array[string], required) - Array of cart items to delete 
    
+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
    
+ Response 200 (application/json)

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - ack: true (boolean, required) - Acknowledge that item was deleted

## Items Quantity [/cart/items/count]
<!-- or /cart/count -->

### Get Total [GET]

Получить общее количество товаров.

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - total_count: 1 (number, required) - Total number of units in the cart

### Get Count [GET /cart/items/{id}/count]
<!-- or /cart/count -->

Получить количество единиц одного товара (sku).

+ Parameters
    + id (string, `id_example`) - Cart Item identifier

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - count: 1 (number, required) - Number of pcs. for the item


### Set Count [PUT /cart/items/{id}/count]
<!-- or /cart/count -->

Задать количество единиц товара в корзине (>= 0).

+ Parameters
    + id (string, `id_example`) - Cart Item identifier

+ Request (application/json)
   
    + Headers
            
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
    + Attributes
        - count: 1 (number, required)
    
+ Response 200 (application/json)

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - item (Cart Item) - Cart Item object with updated pieces count

## Promo code [/cart/items/{id}/promo]
<!-- or /cart/{sku}/promo -->

### Activate [POST]

Активировать промо код для элемента корзины

+ Parameters
    + id (string, `id_example`) - Cart Item identifier
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
             
    + Attributes
        - promo: qwerty (string, required)
    
+ Response 200 (application/json)  

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - ack: true (boolean, required)

### Deactivate [DELETE]

Деактивировать промо код для элемента корзины

+ Parameters
    + id (string, `id_example`) - Cart Item identifier
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
    
+ Response 200 (application/json)  

    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data 
            - ack: true (boolean, required)

# Group Checkout

## Related Info [/checkout]

### Get [GET]

Получить доп. информацию, необходимую для оформления заказа.

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        + data
            - payment_variants (array[Payment Variant])

# Group Orders

## Collection [/orders]

### List [GET /orders{?statuses,search_query,page,limit,sort_field,sort_order}]

Получить список заказов

+ parameters
    - statuses: 0, 1 (optional, array[number]) - Array of order statuses to retrieve
    - search_query: `123456` (optional) - Text to search, e.g. order number or product name
    - limit: 20 (optional, number) - Max quantity of records per page
    - page: 1 (optional, number) - Index of a page
    - sort_field (optional, string) - Field name for sorting
        - default: updated_at
    - sort_order (optional, Sort Order) - Sorting order
         - default: desc
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        + data
            - results (array[Order], required)
            - active: 10 (number, required) - Number of active orders
            - completed: 0 (number, required) - Number of completed orders
            - navigation (Navigation, required)

## Count [/orders/count]

### Get [GET]

Получить количество заказов.

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - statuses_count (array)
                - (object)
                    - status (Order Status)
                    - count: 10 (number)
            - active: 10 (number) - Number of active orders
            - completed: 0 (number) - Number of completed orders
            - total: 10 (number) - Total number of orders

## Single Order [/orders/{id}]

### Get [GET]

Получить заказ по его ID

+ Parameters
    + id (string, `3918QQ8`) - Order identifier 

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US
            
+ Response 200 (application/json)
    
    + Attributes
        - data 
            - order (Order)

## Order Placement [/orders/create]

### Place Order [POST]

Размещение заказа. 
Если у пользователя еще нет сохраненных адресов, то передается полностью заполненный объект Address за исключением поля id (бэкенд сохраняет адрес), 
иначе в объекте Address достаточно передавать только id. 

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
            
    + Attributes
        - address (Address)
        - items (array)
            - (object)
                - id: <item_id> (string) - Item identifier
                - count: 1 (number) - Number of pieces
        - billing
            - payment_variant: 0 (Payment Variant)
            - customer_token: 334b76e423e14d37101cceed318d2cfe7bdd2748 (string) - Token given by payment provider
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - order (Order)

## Delivery  [/orders/{id}/delivery]

### Report issue [POST /orders/{id}/delivery/report_issue]

Сообщить, что заказ не был доставлен.

+ Parameters
    + id (string, `3918QQ8`) - Order identifier 

+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
            
    + Attributes
        - email: `example@example.com` (string) - User email for contact
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - message: Something like: Thank you. Our support team will contact you ASAP. (string) - Number of comments for the product

### Confirm delivery [POST /orders/{id}/delivery/confirm]

Подтвердить доставку и оставить отзыв (c возможностью отправки фото и видео).

+ Parameters
    + id (string, `3918QQ8`) - Order identifier 

+ Request (multipart/form-data; boundary={boundary value})
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
            
    + Attributes
        - rating: 5 (number) - Rating given by user
        - is_anonymous: false (boolean) - Whether the review is made anonymously
        - body: Text of review (string, optional) - Review of the product
    
    + Body
        
            --{boundary value}
                Content-Disposition: form-data; name="image"; filename="image.png"
                Content-Type: image/png
        
                {file content}
            --{boundary value}--
    
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - order (Order)

# Group Comments

## Product Comments [/products/{id}/comments]
    
### Get Count [GET /products/{id}/comments/count]

Получить количество комментариев.

+ Parameters
    + id (string, `1`) - Product identifier 

+ Request
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
+ Response 200 (application/json)
    
    + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - count: 1 (number) - Number of comments for the product

### Fetch [GET /products/{id}/comments{?limit,page,sort_order,sort_field}]

Получить список комментариев

+ parameters
    - id: 1 (string) - Product identifier
    - limit: 20 (optional, number) - Max quantity of records per page
    - page: 1 (optional, number) - Index of a page
    - sort_field (optional, string) - Field name for sorting
        - default: created_at
    - sort_order (optional, Sort Order) - Sort order
         - default: desc
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: en-US

+ Response 200 (application/json)

    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
    + Attributes
        - data
            - results (array[Comment])
            - navigation (Navigation)

### Send or Reply [POST /products/{product_id}/comments]

Создать комментарий или ответ. Если в объекте Comment заполнены поля `parent_id` и `is_reply`, 
то комментарий создается как ответ на другой комментарий.

+ parameters
    - product_id (string, required, `1`) - Product identifier
    
+ Request (application/json)
   
    + Headers
       
            x-mapi-access-token: `access_token`
            x-mapi-key: xxxxxxxxxxxxxxxx
            Accept-Language: ru-RU
             
    + Attributes
        - comment (Comment)
             
+ Response 200 (application/json)

     + Headers
    
            x-mapi-access-token: `access_token`
            x-mapi-access-exp: 2019-01-28T17:39:57.620Z
            x-mapi-version: 1.0
            
     + Attributes
        - data
            - item (Comment) - Created Comment

# Group Reviews
<!-- TODO Later -->

# Group Users
<!-- TODO Later -->

## Data Structures

### Address
+ id: <address_id> (string, required) - The unique identifier for an address
+ title: Main (string, required) - Address name given by user
+ country: US (string, required) - ISO-3166-1 country code
+ state: CA (string, required) - US States Abbreviations [2 symbols] for country == US
+ region: null (string, required) - Region if country is not US 
+ city: City17 (string, required) - Name of the city
+ zip: 101000abc (string, required) - ZIP code
+ line1: Unknown Street 123 (string, required) - Main line for address
+ line2: Apt. 1 (string, optional) - Second line for address
+ street: Main Avenue (string, optional) - Street name
+ block: null (optional) - block identifier // корпус
+ building: 1 (optional) - building number  // строение
+ house: 5 (optional) - house number
+ apartment: null (optional) - apartment number
+ first_name: John Dow (string, required) - Receiver's first name
+ last_name: Dow (string, required) - Receiver's last name
+ phone: 9991234567 (number, required) - Phone number without country code
+ email: john.dow@example.com (string, required) - Receiver's email

### Attribute
+ id: <attribute_id> (string, required) - The unique identifier for an attribute
+ key: size (string, required) - key of the attribute
+ name: Size (string, required) - name of the attribute
+ value: L (string, required) - associated value of the attribute

### Banner
+ id: <banner_id> (string, required) - The unique identifier for banner
+ title: Banner title (optional)
+ title_color: #ffffff (string, optional)
+ image: https://banner_cdn_href (string, required)
+ destination (Destination, required)

### Bank Card
+ id: <card_id> (string) - The unique identifier for bank card
+ number: `5465********2321` (string) - Card number, partially
+ last4: 2321 (string) - Last 4 symbols of the card number
+ type: card_type (string) - Card type
+ expiry: `2019-01-28T17:39:57.620Z` (string) - Date of card expiration
+ icon_url: `image_cdn_href` (string) - URL of card icon
+ is_preferable: true (boolean) - Whether this card was selected as preferable

### Cart
+ items (array[Cart Item], required) - array of cart items
+ total_count: 1 (number, required) - Total number of units
+ total_price (Price, required) - Final total price
+ total_promo (Price, required) - Total value of all applied promos
+ received_at: `2017-06-01T18:06:28.620Z` (required) - date-time of cart retriving

### Cart Item
+ id: <item_id> (string) - The unique identifier for cart item
+ sku: sku_id_example (SKU) - SKU identifier
+ pcs_count: 2 (number) - Number of pieces
+ product (Product)
+ promo_applied (boolean) - Is promo code applied to product

### Category Base
+ id: 310 (string, required) - The unique identifier for a category
+ name: Clothes (string, required) - Category name
+ thumbnail: https://category_thumbnail_cdn_href (string, required)

### Category 
+ include Category Base
+ parent_id: null (required) - The unique identifier of parent category
+ depth: 1 (number, required) - The depth of hierarchy for current category
+ children_count: 1 (number, required) - Number of subcategories
+ children (array[Category], required) - Array of subcategories
+ products_count: 14 (number, required) - Number of products on this level
+ is_interest: true (boolean, required) - Whether this category is interest or not
+ is_my_interest: false (boolean, required) - Whether this category belongs to interests of current user or not

### Comment
+ id: <commentID> (string, required) - The unique identifier for a comment
+ parent_id: <commentID> (string, required) - The unique identifier for a comment
+ is_shop: false (boolean, required) - Whether this comment belongs to the shop
+ is_reply: false (boolean, required) - Whether this comment is reply to another comment
+ user (User, required)
+ created_at: `2017-06-01T18:06:28.620Z` (required) - Date-time of comment creation
+ text: Amazing! I wanna get one! (string, required) - comment text
+ replies (array[Comment], required) - Array of Replies to the comment

### Content Block
+ subtitle: BlockTitle (string, optional)
+ text: Long text (string, optional)
+ image: <image_cdn_href> (string, optional)

### Delivery Type (enum)
+ 0 (number) - pickup
+ 1 (number) - courier

### Destination
The Object that contains info about possible target destination 
+ url: <destination_url> (string, required) - Target destination url
+ type: product (string, required) - Destination type
+ id: <id> (string, required) - The unique identifier for destination

### Error
+ code: 123 (number, required) - Error code
+ message: Something bad (required) - Error message

### Filter Flags
+ is_hit: false (boolean, optional)
+ is_top: false (boolean, optional)
+ is_new: false (boolean, optional)
+ is_suggested: true (boolean, optional)

### Gender (enum)
+ 0 (number) - male
+ 1 (number) - female

### Interest
+ include Category Base
+ is_my: true (boolean, required) - Is in the list of my interests or not

### Media Item
+ type (Media Type, required) - Video or image media type
+ One of
    - Properties
        - url: https://cdn_url_video.m3u8 (URL_string, required) - Video streem url
        - thumbnail: https://thumbnail_cdn_href (URL_string, required) - Thumbnail image url for preview
    - Properties
        - url: <image1_cdn_href> (URL_string, required) - Image url

### Media Type (enum)
+ video
+ image

### Navigation
+ total_count: 100000 (required, number) - Total count of items
+ current_page: 1 (required, number) - Current page index
+ page_size: 10 (required, number) - Number of items per page
+ page_count: 10000 (required, number) - Number of pages

### Order
+ id: <id> (string, required) - The unique identifier of the order
+ number: 3918QQ8 (string) - The Number of the order
+ status (Order Status)
+ status_text: Package delivered - Short description for order status
+ delivery_deadline: `2017-06-01T18:06:28.620Z` - Deadline to deliver the order
+ shipping_date: `2017-06-01T18:06:28.620Z` - The date-time the order was shipped
+ created_at: `2017-06-01T18:06:28.620Z` - Date-time of order creation
+ updated_at: `2017-06-28T17:39:57.620Z` - Date-time of last order update
+ product (Product)
+ sku (SKU)
+ pcs_count: 1 (number) - Number of pieces 
+ price (Price) - Total price
+ receiver (Address)
+ shipping (Shipping, required) - Info about shipping
+ is_active: true (boolean) - Where the order is in active state or not. Depends on statuses state machine, e.g. order is active if status equals to awaiting shipment or shipped.
+ thumbnail: https://order_thumbnail_image_cdn_href (string) - URL of Thumbnail image

### Order Status (enum)
+ 0 (number) - awaiting_shipment
+ 1 (number) - shipped
+ 2 (number) - delivered
+ 3 (number) - not_delivered
+ 4 (number) - refunded

### Payment Type (enum)
+ 0 (number) - cash 
+ 1 (number) - bank_card

### Payment Variant (enum)
+ 0 (number) - bank_card 
+ 1 (number) - paypal
+ 2 (number) - yandex_money

### Payment Provider (enum)
+ 0 (number) - Stripe

### Price
+ currency: USD (string, required)
+ value: 85.99 (number, required)
+ symbol: $ (string, required)

### Product 
+ id: <id> (string, required) - The unique identifier for a product
+ title: Photoball (string, required) - Name of the product
+ description: Text (string, required) - Description of the product
+ views_count: 100516 (number, required) - Number of views
+ likes_count: 45 (number, required) - Number of likes
+ purchased_count: 100 (number, required) - Number of purchased units
+ shop (Shop, required)
+ media_items (array[Media Item], fixed-type) - Array of media items such as video and images.
+ price (Price, required)
+ discounted_price (Price, required)
+ disc_percent: `-5` (required) - Discount percentage
+ category (Category, required)
+ destination (Destination, optional)
+ created_at: `2017-06-01T18:06:28.620Z` (required) - Date-time of product creation
+ updated_at: `2017-06-28T17:39:57.620Z` (required) - Date-time of last product update
+ is_favorite: false (boolean, required) - Is product contained in the user's Favorites
+ is_in_cart: false (boolean, required) - Is product contained in the user's Cart
+ filter_flags (Filter Flags, required) - Object with additional flags
+ label (required)
    + title: Sale 
    + value: null 
+ rating: 4.9 (number, required) - Decimal rating of the product
+ reviews_count: 217 (number, required) - Number of reviews
+ comments
    + total_count: 57 (number, required) - Number of comments
    + recent (array[Comment], required) - Array of top N comments related to the product

### Product Extended
+ Include Product
+ warranty
    + title: We are on your side (required)
    + blocks (array[Content Block], required) - Array of information blocks
+ details
    + subtitle: Review (string, optional)
    + blocks (array[Content Block], required) - Array of Review blocks
+ variants 
    + *sku_id_example (SKU)* (Variant, required)
+ shipping (Shipping, required) - Info about shipping
+ user_reviews
    + total_count: 15 (number, required) - Total number of reviews of this product
    + rating: 4.5 (number, required) - Decimal rating of the product
    + recent (array[User Review], required) - Array of top N reviews
    + my (array[User Review], required) - Array of reviews that belongs to current user

### Search Params
+ search_query: AnyString (string, optional) - Search query
+ category_id: <cat_id> (string, optional) - Category ID
+ product_ids (array[string], optional) - Array of product unique identifiers
+ shop_ids (array[string], optional) - Array of shop unique identifiers
+ Include Filter Flags (optional) - Flags for filtering
+ price_from: 10.5 (number, optional) - Minimum price for filtering
+ price_to: 100.5 (number, optional) - Maximum price for filtering
+ sort_field: name (optional) - Field name for sorting
+ sort_order (Sort Order, optional) - Sorting order
    - default: asc

### Seller
+ Include User

### Shipping
+ id: shipping_id (string, required)
+ title: Free Shipping (required)
+ interval: 15 - 20  days (string, required)
+ price (Price, required) - Delivery price
+ sale_tax (Price, required) - Tax if needed

### Shop
+ id: <id> (string, required) - The unique identifier for a shop
+ owner (Seller, required) - Info about user owning the shop
+ name: Shop Name (string, required) - Name of the shop
+ description: The Best Shop Ever (string, required) - Description of the shop
+ media
    + avatar: https://shop_avatar_cdn_href (string, required) - Shop avatar url
    + cover: https://cover_avatar_cdn_href (string, optional) - Shop background url if needed
+ rating: 4.5 (number, required) - Decimal rating value
+ products_count: 114 (number, required) - Total number of products 
+ payment_types (array[Payment Type], required)
+ delivery_types (array[Delivery Type], required)
+ orders_count: 100 (number, required) - Number of orders
+ likes_count: 45 (number, required) - Number of likes
+ stock_count: 500 (number, required) - Number of units
+ is_favorite: true (boolean) - Whether this shop is in user's favorites list or not

### Shop Extended
+ Include Shop
+ addresses (array[Address])

### SKU (string) - Stock Keeping Unit

### Social Net (enum)
+ fb
+ ok
+ google

### Sort Order (enum)
+ asc - Ascending
+ desc - Descending

### `URL_string` (string)

### User
+ id: user_id (string, required) - The unique identifier for a user
+ name: John Dow (string, required) - User's name //  возможно из соц. сети...
+ avatar: https://avatar_cdn_href (string, required) - User avatar url // возможно из соц. сети, как в Joom??
+ social_profile (object) - // необходимость такого объекта под вопросом
    + network (Social Net, required)
    + user_id: <social_id> (string, optional) - user id in social network 
    + name: John Dow (string, required)
    + avatar: https://avatar_cdn_href (string, required)

### User Extended
+ Include User
+ email: john.dow@example.com (optional) - User's email // возможно здесь не нужно, т.к. контакты у нас в адресах
+ birthday: `1990-06-01T18:06:28.620Z` (required) - Date-time of user's birthday
+ gender (Gender, required) - User's gender
+ addresses (array[Address], required) - List of user's addresses
+ reviews_count: 1 (number, required) - Number of reviews
+ orders_count: 5 (number, required) - Number of user orders
+ following_count: 3 (number, required) - Number of user subscriptions

### User Review
+ id: <reviewID> (string, required) - The unique identifier for a review
+ rating: 5 (number, required) - Rating given by user
+ is_anonymous: false (boolean) - Whether the review is made anonymously
+ user (User, required) - User object or Null if the review is anonymous.
+ created_at: `2017-06-01T18:06:28.620Z` (required) - Date-time of review creation
+ updated_at: `2017-06-28T17:39:57.620Z` (required) - Date-time of review updte
+ title: Title (optional)
+ body: Text of review (required)
+ is_my: false (required) - Whether this review is user's own review or not
+ is_liked: true (required) - Whether user liked this review or not
+ likes_count: 4 (required) - Number of likes
+ pics (array[URL_string], required) - Images uploaded by user

### Variant
+ sku: sku_id_example (SKU, required) - SKU identifier of a combination
+ title: Article123 (string, required) - text for the variant
+ attributes (array[Attribute]) - Array of attributes like color, size, custom
+ media_items (array[Media Item], required)
+ is_available: true (boolean, required) - is the variant available or not
+ stock_count: 5 (number, required) - number of units

### Web Page Key (enum)
+ `about`
+ `terms_of_use`
+ `privacy_policy`
+ `warranty`
